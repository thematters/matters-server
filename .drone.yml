kind: pipeline
name: default

steps:
  - name: node modules
    image: node:10.15
    commands:
      - npm install --no-progress --quiet --unsafe-perm >  npm-install.log

  - name: tslint
    image: node:10.15
    commands:
      - npm run tslint:production
      - npm run format:check

  - name: test
    image: node:10.15
    environment:
      CODECOV_TOKEN: de5ab681-0837-4a24-b614-0a29225a7e4c
      MATTERS_ENV: test
      MATTERS_PG_HOST: db
      MATTERS_PG_USER: postgres
      MATTERS_PG_PASSWORD: postgres
      MATTERS_PG_DATABASE: matters-test
      MATTERS_PUBSUB_HOST: redis
      MATTERS_QUEUE_HOST: redis
      MATTERS_CACHE_HOST: redis
      MATTERS_JWT_SECRET: QsNmu9
      MATTERS_JPUSH_API_KEY: 8e60db0a78eb029fe1bd83d6
      MATTERS_JPUSH_API_SECRET: 42dd6fb3e481a34eadbc5ee5
      MATTERS_ELASTICSEARCH_HOST: elasticsearch
      MATTERS_ELASTICSEARCH_PORT: 9200
      MATTERS_IPFS_HOST: ipfs
      MATTERS_IPFS_PORT: 5001
    commands:
      - npm run test

  - name: build
    image: node:10.15
    commands:
      - npm run build

  # === CI tasks for `develop` branch ===
  - name: develop:db-migrate
    image: node:10.15
    environment:
      MATTERS_ENV: development
      MATTERS_APOLLO_API_KEY:
        from_secret: APOLLO_API_KEY
      MATTERS_PG_HOST:
        from_secret: DEVELOP_PG_HOST
      MATTERS_PG_DATABASE:
        from_secret: DEVELOP_PG_DATABASE
      MATTERS_PG_USER:
        from_secret: DEVELOP_PG_USER
      MATTERS_PG_PASSWORD:
        from_secret: DEVELOP_PG_PASSWORD
    commands:
      - npm run db:migrate
    when:
      branch:
        - develop
        - feature/develop
      event:
        - push

  - name: develop:deploy
    image: matters/awsebcli
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION: ap-southeast-1
    commands:
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set aws_default_region $AWS_DEFAULT_REGION
      - bash ./bin/eb-deploy.sh develop
    when:
      branch:
        - develop
        - feature/eb-node-env
      event:
        - push

  # === CI tasks for `master` branch
  - name: prod:db-migrate
    image: node:10.15
    environment:
      MATTERS_ENV: production
      MATTERS_PG_HOST:
        from_secret: PROD_PG_HOST
      MATTERS_PG_DATABASE:
        from_secret: PROD_PG_DATABASE
      MATTERS_PG_USER:
        from_secret: PROD_PG_USER
      MATTERS_PG_PASSWORD:
        from_secret: PROD_PG_PASSWORD
    commands:
      - npm run db:migrate
    when:
      branch:
        - master
        - feature/prod
      event:
        - push

  - name: prod:deploy
    image: matters/awsebcli
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      AWS_DEFAULT_REGION: ap-southeast-1
    commands:
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set aws_default_region $AWS_DEFAULT_REGION
      - bash ./bin/eb-deploy.sh prod
    when:
      branch:
        - master
        - feature/prod
      event:
        - push

  - name: slack
    image: plugins/slack
    settings:
      webhook: https://hooks.slack.com/services/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
      channel: log_github
    username: Drone CI
    when:
      status: [success, failure]

services:
  - name: db
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: matters-test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  - name: redis
    image: redis
  - name: elasticsearch
    image: elasticsearch:5-alpine
    ports:
      - 9200
  - name: ipfs
    image: ipfs/go-ipfs:latest
    ports:
      - 5001
