name: Test

on:
  push:
    branches-ignore:
      - develop
      - main
      - master
      - stage

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      elasticsearch:
        image: elasticsearch:8.2.3
        ports:
          - 9200:9200
        env:
          discovery.type: single-node
          xpack.security.enabled: false
      ipfs:
        image: ipfs/go-ipfs:v0.14.0
        ports:
          - 5001:5001
      stripe:
        image: stripemock/stripe-mock:latest
        ports:
          - 12111:12111
          - 12112:12112

    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Spawn Postgres DB container (manually)
        # to mount local source code into the container, can only manually spawn it
        run: |
          docker container run -d --name postgres-db --hostname postgres-db \
            --network ${{ job.container.network }} --network-alias postgres -p 5432:5432 \
            -e "POSTGRES_DB=matters-test" \
            -e "POSTGRES_USER=postgres" \
            -e "POSTGRES_PASSWORD=postgres" \
            -e GITHUB_ACTIONS=true -e CI=true \
            -v "postgres_data":"/var/lib/postgresql/data/" \
            -v "$PWD/db":"/db" \
            postgres:12-alpine
          # docker start cff7d3d3876b619bc17ed89fa45b3aae388ebbffa46e4a833c3c453303a76a5f
          docker container ls -a
          docker container exec postgres-db sh -xc 'pwd; ls -la; find /db'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: node_modules_cache
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}

      - name: Install Dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: npm ci --legacy-peer-deps

      - name: Lint
        run: |
          npm run lint \
          && npm run format:check

      - name: Test
        run: npm run test
        env:
          CODECOV_TOKEN: de5ab681-0837-4a24-b614-0a29225a7e4c
          MATTERS_ENV: test
          MATTERS_PG_HOST: localhost
          MATTERS_PG_USER: postgres
          MATTERS_PG_PASSWORD: postgres
          MATTERS_PG_DATABASE: matters-test
          MATTERS_QUEUE_HOST: localhost
          MATTERS_CACHE_HOST: localhost
          MATTERS_MATTY_ID: 6
          MATTERS_JWT_SECRET: QsNmu9
          MATTERS_ELASTICSEARCH_HOST: localhost
          MATTERS_ELASTICSEARCH_PORT: 9200
          MATTERS_IPFS_HOST: localhost
          MATTERS_IPFS_PORT: 5001
          MATTERS_OICD_PRIVATE_KEY: .ebextensions/oicd_rsa_private_local.pem
          MATTERS_STRIPE_SECRET: sk_test_foobar
          MATTERS_SENDGRID_API_KEY: SG.0-_abcabcabc.
          MATTERS_OPENSEA_API_BASE: 'https://rinkeby-api.opensea.io/api/v1'

      - name: Build
        run: npm run build
